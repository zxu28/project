{"version":3,"sources":["../../../src/export/exportHermes.ts"],"sourcesContent":["import { ExpoConfig, getConfigFilePaths, Platform } from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport fs from 'fs';\nimport path from 'path';\n\nconst PODFILE_HERMES_LHS = /(?::hermes_enabled\\s*=>|hermes_enabled\\s*:)/;\nconst PODFILE_HERMES_PROPS_REFERENCE_RE = new RegExp(\n  String.raw`^\\s*${PODFILE_HERMES_LHS.source}\\s*podfile_properties\\['expo\\.jsEngine'\\]\\s*==\\s*nil\\s*\\|\\|\\s*podfile_properties\\['expo\\.jsEngine'\\]\\s*==\\s*'hermes'\\s*,?\\s*(?:#.*)?$`,\n  'm'\n);\nconst PODFILE_HERMES_TRUE_RE = new RegExp(\n  String.raw`^\\s*${PODFILE_HERMES_LHS.source}\\s*true\\s*(?:,\\s*)?(?:[^\\n]*)?$`,\n  'm'\n);\nconst PODFILE_HERMES_FALSE_RE = new RegExp(\n  String.raw`^\\s*${PODFILE_HERMES_LHS.source}\\s*false\\s*(?:,\\s*)?(?:[^\\n]*)?$`,\n  'm'\n);\n\nfunction getLiteralHermesSettingFromPodfile(content: string): boolean | null {\n  const isPropsReference = content.search(PODFILE_HERMES_PROPS_REFERENCE_RE) >= 0;\n  if (isPropsReference) {\n    return null;\n  }\n  if (PODFILE_HERMES_TRUE_RE.test(content)) {\n    return true;\n  }\n  if (PODFILE_HERMES_FALSE_RE.test(content)) {\n    return false;\n  }\n  return null;\n}\n\nexport async function assertEngineMismatchAsync(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'ios' | 'android' | 'jsEngine'>,\n  platform: Platform\n) {\n  const isHermesManaged = isEnableHermesManaged(exp, platform);\n  const paths = getConfigFilePaths(projectRoot);\n  const configFilePath = paths.dynamicConfigPath ?? paths.staticConfigPath ?? 'app.json';\n  await maybeThrowFromInconsistentEngineAsync(\n    projectRoot,\n    configFilePath,\n    platform,\n    isHermesManaged\n  );\n}\n\nexport function isEnableHermesManaged(\n  expoConfig: Partial<Pick<ExpoConfig, 'ios' | 'android' | 'jsEngine'>>,\n  platform: string\n): boolean {\n  switch (platform) {\n    case 'android': {\n      return (expoConfig.android?.jsEngine ?? expoConfig.jsEngine) !== 'jsc';\n    }\n    case 'ios': {\n      return (expoConfig.ios?.jsEngine ?? expoConfig.jsEngine) !== 'jsc';\n    }\n    default:\n      return false;\n  }\n}\n\nexport function parseGradleProperties(content: string): Record<string, string> {\n  const result: Record<string, string> = {};\n  for (let line of content.split('\\n')) {\n    line = line.trim();\n    if (!line || line.startsWith('#')) {\n      continue;\n    }\n\n    const sepIndex = line.indexOf('=');\n    const key = line.slice(0, sepIndex);\n    const value = line.slice(sepIndex + 1);\n    result[key] = value;\n  }\n  return result;\n}\n\nexport async function maybeThrowFromInconsistentEngineAsync(\n  projectRoot: string,\n  configFilePath: string,\n  platform: string,\n  isHermesManaged: boolean\n): Promise<void> {\n  const configFileName = path.basename(configFilePath);\n  if (\n    platform === 'android' &&\n    (await maybeInconsistentEngineAndroidAsync(projectRoot, isHermesManaged))\n  ) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and Android native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In Android native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'gradle.properties')}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'app', 'build.gradle')}\\n` +\n        'Learn more: https://expo.fyi/hermes-android-config'\n    );\n  }\n\n  if (platform === 'ios' && (await maybeInconsistentEngineIosAsync(projectRoot, isHermesManaged))) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and iOS native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In iOS native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile')}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile.properties.json')}\\n` +\n        'Learn more: https://expo.fyi/hermes-ios-config'\n    );\n  }\n}\n\nexport async function maybeInconsistentEngineAndroidAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check android native project if by chance to be consistent between app config\n\n  // Check gradle.properties from prebuild template\n  const gradlePropertiesPath = path.join(projectRoot, 'android', 'gradle.properties');\n  if (fs.existsSync(gradlePropertiesPath)) {\n    const props = parseGradleProperties(await fs.promises.readFile(gradlePropertiesPath, 'utf8'));\n    const isHermesBare = props['hermesEnabled'] === 'true';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function isHermesPossiblyEnabled(projectRoot: string): boolean | null {\n  // Trying best to check ios native project if by chance to be consistent between app config\n\n  // Check ios/Podfile for a literal :hermes_enabled => (true|false) or hermes_enabled: (true|false)\n  const podfilePath = path.join(projectRoot, 'ios', 'Podfile');\n  if (fs.existsSync(podfilePath)) {\n    const content = fs.readFileSync(podfilePath, 'utf8');\n    const literal = getLiteralHermesSettingFromPodfile(content);\n    if (literal != null) return literal;\n\n    // If there is no props reference and no literal, assume Hermes is enabled by default\n    const hasPropsReference = PODFILE_HERMES_PROPS_REFERENCE_RE.test(content);\n    if (!hasPropsReference) {\n      return true;\n    }\n  }\n\n  // Check Podfile.properties.json from prebuild template\n  const podfilePropertiesPath = path.join(projectRoot, 'ios', 'Podfile.properties.json');\n  if (fs.existsSync(podfilePropertiesPath)) {\n    try {\n      const props = JsonFile.read(podfilePropertiesPath);\n      return props['expo.jsEngine'] === 'hermes';\n    } catch {\n      // ignore\n    }\n  }\n\n  return null;\n}\n\nexport async function maybeInconsistentEngineIosAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check ios native project if by chance to be consistent between app config\n\n  // Check ios/Podfile for a literal :hermes_enabled => (true|false)\n  const podfilePath = path.join(projectRoot, 'ios', 'Podfile');\n  if (fs.existsSync(podfilePath)) {\n    const content = await fs.promises.readFile(podfilePath, 'utf8');\n    const literal = getLiteralHermesSettingFromPodfile(content);\n    if (literal != null) {\n      if (isHermesManaged !== literal) return true;\n    } else {\n      // If there is no props reference and no literal, assume Hermes is enabled by default\n      const hasPropsReference = PODFILE_HERMES_PROPS_REFERENCE_RE.test(content);\n      if (!hasPropsReference) {\n        const assumedEnabled = true;\n        if (isHermesManaged !== assumedEnabled) return true;\n      }\n    }\n  }\n\n  // Check Podfile.properties.json from prebuild template\n  const podfilePropertiesPath = path.join(projectRoot, 'ios', 'Podfile.properties.json');\n  if (fs.existsSync(podfilePropertiesPath)) {\n    const props = await parsePodfilePropertiesAsync(podfilePropertiesPath);\n    const isHermesBare = props['expo.jsEngine'] === 'hermes';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// https://github.com/facebook/hermes/blob/release-v0.5/include/hermes/BCGen/HBC/BytecodeFileFormat.h#L24-L25\nconst HERMES_MAGIC_HEADER = 'c61fbc03c103191f';\n\nexport async function isHermesBytecodeBundleAsync(file: string): Promise<boolean> {\n  const header = await readHermesHeaderAsync(file);\n  return header.subarray(0, 8).toString('hex') === HERMES_MAGIC_HEADER;\n}\n\nexport async function getHermesBytecodeBundleVersionAsync(file: string): Promise<number> {\n  const header = await readHermesHeaderAsync(file);\n  if (header.subarray(0, 8).toString('hex') !== HERMES_MAGIC_HEADER) {\n    throw new Error('Invalid hermes bundle file');\n  }\n  return header.readUInt32LE(8);\n}\n\nasync function readHermesHeaderAsync(file: string): Promise<Buffer> {\n  const fd = await fs.promises.open(file, 'r');\n  const buffer = Buffer.alloc(12);\n  await fd.read(buffer, 0, 12, null);\n  await fd.close();\n  return buffer;\n}\n\nasync function parsePodfilePropertiesAsync(\n  podfilePropertiesPath: string\n): Promise<Record<string, string>> {\n  try {\n    return JSON.parse(await fs.promises.readFile(podfilePropertiesPath, 'utf8'));\n  } catch {\n    return {};\n  }\n}\n\nexport function isAndroidUsingHermes(projectRoot: string) {\n  // Check gradle.properties from prebuild template\n  const gradlePropertiesPath = path.join(projectRoot, 'android', 'gradle.properties');\n  if (fs.existsSync(gradlePropertiesPath)) {\n    const props = parseGradleProperties(fs.readFileSync(gradlePropertiesPath, 'utf8'));\n    return props['hermesEnabled'] === 'true';\n  }\n\n  // Assume Hermes is used by default.\n  return true;\n}\n\nexport function isIosUsingHermes(projectRoot: string) {\n  // If nullish, then assume Hermes is used.\n  return isHermesPossiblyEnabled(projectRoot) !== false;\n}\n"],"names":["assertEngineMismatchAsync","getHermesBytecodeBundleVersionAsync","isAndroidUsingHermes","isEnableHermesManaged","isHermesBytecodeBundleAsync","isHermesPossiblyEnabled","isIosUsingHermes","maybeInconsistentEngineAndroidAsync","maybeInconsistentEngineIosAsync","maybeThrowFromInconsistentEngineAsync","parseGradleProperties","PODFILE_HERMES_LHS","PODFILE_HERMES_PROPS_REFERENCE_RE","RegExp","String","raw","source","PODFILE_HERMES_TRUE_RE","PODFILE_HERMES_FALSE_RE","getLiteralHermesSettingFromPodfile","content","isPropsReference","search","test","projectRoot","exp","platform","isHermesManaged","paths","getConfigFilePaths","configFilePath","dynamicConfigPath","staticConfigPath","expoConfig","android","jsEngine","ios","result","line","split","trim","startsWith","sepIndex","indexOf","key","slice","value","configFileName","path","basename","Error","join","gradlePropertiesPath","fs","existsSync","props","promises","readFile","isHermesBare","podfilePath","readFileSync","literal","hasPropsReference","podfilePropertiesPath","JsonFile","read","assumedEnabled","parsePodfilePropertiesAsync","HERMES_MAGIC_HEADER","file","header","readHermesHeaderAsync","subarray","toString","readUInt32LE","fd","open","buffer","Buffer","alloc","close","JSON","parse"],"mappings":"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"}